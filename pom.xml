<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>JavaAssignmentforOptionalPart2</artifactId>
    <version>1.0-SNAPSHOT</version>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <checkstyle.config.fail.on.error>true</checkstyle.config.fail.on.error> <!-- -->
        <findbugs.config.fail.on.error>false</findbugs.config.fail.on.error> <!-- -->
        <jacoco.execs.directory>${project.basedir}/../target/jacoco</jacoco.execs.directory> <!-- -->
        <jdk.version>1.8</jdk.version>
        <maven.checkstyle.plugin.version>2.17</maven.checkstyle.plugin.version> <!-- -->
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version> <!-- -->
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version> <!-- -->
        <maven.install.plugin.version>2.5.2</maven.install.plugin.version> <!-- -->
        <maven.jar.plugin.version>3.0.2</maven.jar.plugin.version> <!-- -->
        <maven.pmd.plugin.version>3.10.0</maven.pmd.plugin.version> <!-- -->
        <maven.resources.plugin.version>3.0.2</maven.resources.plugin.version> <!-- -->
        <maven.spotbugs.plugin.version>3.1.12</maven.spotbugs.plugin.version> <!-- -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- -->
        <skipCodeAnalysis>false</skipCodeAnalysis> <!-- -->
    </properties>


    <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
    <plugins>
    <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
    <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.plugin.version}</version>
    </plugin>
    <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
    <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.plugin.version}</version>
    </plugin>

    <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
    </plugin>

    <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven.install.plugin.version}</version>
    </plugin>

    <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.plugin.version}</version>
        <executions>
            <execution>
                <id>default-deploy</id>
                <phase>deploy</phase>
                <goals>
                    <goal>deploy</goal>
                </goals>
            </execution>
        </executions>
    </plugin>

    <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
    </plugin>

    <!-- SpotBugs Static Analysis -->
    <!-- SpotBugs is a plugin which uses static analysis to look for bugs in the source code-->
    <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${maven.spotbugs.plugin.version}</version>
        <configuration>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <failOnError>true</failOnError>
            <spotbugsXmlOutputDirectory>${project.build.directory}/findbugs</spotbugsXmlOutputDirectory>
            <spotbugsXmlOutputFilename>findbugs.xml</spotbugsXmlOutputFilename>
            <includeFilterFile>${basedir}/spotbugs-security-include.xml</includeFilterFile>
            <excludeFilterFile>${basedir}/spotbugs-security-exclude.xml</excludeFilterFile>
            <plugins>
                <plugin>
                    <groupId>com.h3xstream.findsecbugs</groupId>
                    <artifactId>findsecbugs-plugin</artifactId>
                    <version>1.9.0</version>
                </plugin>
            </plugins>
        </configuration>
    </plugin>

    <!-- PMD Plugin Configuration -->
    <!-- PMD is a source code analyzer and produces report on both code violations and
    detected copy and paste fragments. -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven.pmd.plugin.version}</version>
        <executions>
            <execution>
                <phase>prepare-package</phase>
                <configuration>
                    <skip>${skipCodeAnalysis}</skip>
                    <rulesets>
                        <ruleset>pmd-rules.xml</ruleset>
                    </rulesets>
                    <sourceEncoding>utf-8</sourceEncoding>
                    <minimumTokens>100</minimumTokens>
                    <!--minimum code size to be checked for repetition.
                    100 is default and corresponds to  5-10 LOC.-->
                    <targetJdk>${jdk.version}</targetJdk>
                    <outputDirectory>${project.build.directory}/pmd</outputDirectory>
                    <targetDirectory>${project.build.directory}/pmd</targetDirectory>
                    <excludes>
                        <exclude>**/*Bean.java</exclude>
                        <exclude>**/generated/*.java</exclude>
                        <exclude>**/generated-sources/**</exclude>
                    </excludes>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources/stubs</excludeRoot>
                    </excludeRoots>
                </configuration>
                <goals>
                    <goal>pmd</goal>
                    <goal>cpd</goal>
                </goals>
            </execution>
        </executions>
    </plugin>

    <!-- CheckStyle Plugin Configuration -->
    <!--Checkstyle plugin checks the source code if it compiles with coding rules and standards -->
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <executions>
            <execution>
                <id>validate</id>
                <phase>validate</phase>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>${checkstyle.config.fail.on.error}</failsOnError>
                    <failOnViolation>${checkstyle.config.fail.on.error}</failOnViolation>
                    <outputFile>${basedir}/target/checkstyle/checkstyle-output.xml</outputFile>
                    <skip>${skipCodeAnalysis}</skip>
                </configuration>
                <goals>
                    <goal>check</goal>
                </goals>
            </execution>
        </executions>
    </plugin>
    </plugins>
    </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>